{"version":3,"sources":["webpack/bootstrap 343f41a06e79ca5e7a81","./js/main.js","./js/snake.js","./js/snake-view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,EAAC;;;;;;;ACvCD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,QAAQ;AACzB;AACA;AACA,2BAA0B,oCAAoC;AAC9D,gCAA+B,oCAAoC;AACnE,iCAAgC,oCAAoC;AACpE,iCAAgC,oCAAoC;AACpE,iCAAgC,oCAAoC;AACpE;AACA;AACA;AACA;;AAEA;AACA,2BAA0B,oCAAoC;AAC9D,gCAA+B,oCAAoC;AACnE,iCAAgC,oCAAoC;AACpE,iCAAgC,oCAAoC;AACpE,iCAAgC,oCAAoC;AACpE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,gCAAgC;AACjD;AACA;AACA;AACA;AACA,kBAAiB,gCAAgC;AACjD;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC3HA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,6BAA6B;AAC9C;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,kBAAiB,gCAAgC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 343f41a06e79ca5e7a81\n **/","\n(function() {\n  window.Snake = window.Snake || {};\n  var SnakeBoard = require(\"./snake.js\");\n  var SnakeView = require(\"./snake-view.js\");\n  var board = new SnakeBoard();\n  var gameplay;\n  var rootEl = $('.snake').on(\"click\", function startGame (e) {\n    $('.instructions').hide();\n    board.reset();\n    gameplay = setInterval(callback, 60);\n    $(e.currentTarget).off(\"click\")\n  }.bind(this));\n  var view = new SnakeView(board, rootEl);\n\n  view.setupGrid();\n  var callback = function () {\n    view.bindEvents();\n    view.board.snake.move();\n    view.board.enemySnake.move();\n    view.board.enemySnake2.move();\n    view.board.enemySnake3.move();\n    view.board.enemySnake4.move();\n    view.board.checkApple();\n    view.render();\n    if (view.board.checkGameOver()) {\n      if (view.board.score > view.board.bestScore) {\n        view.board.bestScore = view.board.score;\n      }\n      clearInterval(gameplay);\n      $('.gameover').show();\n      $('.snake').on(\"click\", function startGame (e) {\n        board.reset();\n        $('.gameover').hide();\n        gameplay = setInterval(callback, 60);\n        $(e.currentTarget).off(\"click\")\n      }.bind(this));\n    }\n  };\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 0\n ** module chunks = 0\n **/","var Snake = function (properties) {\n  this.direction = properties.direction;\n  this.segments = properties.segments;\n  this.head = this.segments[0];\n};\n\nSnake.prototype.move = function () {\n  this.lastPosition = this.segments[this.segments.length - 1];\n  for(i = this.segments.length - 1; i > 0; i--) {\n    this.segments[i] = this.segments[i - 1];\n  }\n  if (this.direction === \"N\") {\n    this.segments[0] = this.plus(this.head, [-1, 0]);\n  } else if (this.direction === \"E\") {\n    this.segments[0] = this.plus(this.head, [0, 1]);\n  } else if (this.direction === \"W\") {\n    this.segments[0] = this.plus(this.head, [0, -1]);\n  } else if (this.direction === \"S\") {\n    this.segments[0] = this.plus(this.head, [1, 0]);\n  }\n  if (this.segments[0][0] > 49){\n    this.segments[0][0] = 0;\n  } else if (this.segments[0][0] < 0) {\n    this.segments[0][0] = 49;\n  } else if (this.segments[0][1] > 49) {\n    this.segments[0][1] = 0;\n  } else if (this.segments[0][1] < 0) {\n    this.segments[0][1] = 49;\n  }\n\n  this.head = this.segments[0];\n\n};\n\nSnake.prototype.turn = function (direction) {\n  if (this.isOpposite(direction)) {\n    return;\n  } else {\n    this.direction = direction;\n  }\n};\n\nSnake.prototype.isOpposite = function (dir) {\n  if (this.direction === \"N\") {\n    return dir === \"S\";\n  } else if (this.direction === \"E\") {\n    return dir === \"W\";\n  } else if (this.direction === \"W\") {\n    return dir === \"E\";\n  } else if (this.direction === \"S\") {\n    return dir === \"N\";\n  }\n};\n\nSnake.prototype.plus = function (pos1, direction) {\n  return [pos1[0] + direction[0], pos1[1] + direction[1]];\n};\n\nSnake.prototype.equal = function (pos1, pos2) {\n  return (pos1[0] === pos2[0] && pos1[1] === pos2[1]);\n};\n\nvar Board = function () {\n  this.grid = [];\n  for (var i = 0; i < 50; i++) {\n    this.grid.push(new Array(50));\n  }\n  this.snake = new Snake({direction: \"N\", segments: [[25,25]]});\n  this.enemySnake = new Snake({direction: \"S\", segments: [[10,10]]});\n  this.enemySnake2 = new Snake({direction: \"W\", segments: [[49,49]]});\n  this.enemySnake3 = new Snake({direction: \"E\", segments: [[49,10]]});\n  this.enemySnake4 = new Snake({direction: \"N\", segments: [[10,49]]});\n  this.apple = this.setApple();\n  this.score = 0;\n  this.bestScore = 0;\n};\n\nBoard.prototype.reset = function () {\n  this.snake = new Snake({direction: \"N\", segments: [[25,25]]});\n  this.enemySnake = new Snake({direction: \"S\", segments: [[10,10]]});\n  this.enemySnake2 = new Snake({direction: \"W\", segments: [[49,49]]});\n  this.enemySnake3 = new Snake({direction: \"E\", segments: [[49,10]]});\n  this.enemySnake4 = new Snake({direction: \"N\", segments: [[10,49]]});\n  this.apple = this.setApple();\n  this.score = 0;\n};\n\nBoard.prototype.setApple = function () {\n  return [parseInt(Math.random() * 50),parseInt(Math.random() * 50)];\n};\n\nBoard.prototype.checkApple = function () {\n  if (this.snake.equal(this.snake.head, this.apple)) {\n    this.snake.segments.push(this.snake.lastPosition);\n    this.enemySnake.segments.push(this.enemySnake.lastPosition);\n    this.enemySnake2.segments.push(this.enemySnake2.lastPosition);\n    this.enemySnake3.segments.push(this.enemySnake3.lastPosition);\n    this.enemySnake4.segments.push(this.enemySnake4.lastPosition);\n    this.score = this.score + 1;\n    this.apple = this.setApple();\n  }\n};\n\nBoard.prototype.checkGameOver = function () {\n  for (var i = 1; i < this.snake.segments.length; i++) {\n    if (this.snake.equal(this.snake.head, this.snake.segments[i])) {\n      return true;\n    }\n  }\n  for (var j = 0; j < this.snake.segments.length; j++) {\n      if (this.snake.equal(this.snake.head, this.enemySnake.segments[j])) {\n      return true;\n    } else if (this.snake.equal(this.snake.head, this.enemySnake2.segments[j])) {\n      return true;\n    } else if (this.snake.equal(this.snake.head, this.enemySnake3.segments[j])) {\n      return true;\n    } else if (this.snake.equal(this.snake.head, this.enemySnake4.segments[j])) {\n      return true;\n    }\n  }\n  return false;\n};\n\nmodule.exports = Board;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake.js\n ** module id = 1\n ** module chunks = 0\n **/","var Board = require(\"./snake.js\")\n\nvar View = function (board, $el) {\n  this.board = board;\n  this.$el = $el;\n};\n\nView.prototype.bindEvents = function () {\n  var snake = this.board.snake;\n  var enemySnake = this.board.enemySnake;\n  var enemySnake2 = this.board.enemySnake2;\n  var enemySnake3 = this.board.enemySnake3;\n  var enemySnake4 = this.board.enemySnake4;\n\n    key('left', function () {\n      snake.turn(\"W\");\n      enemySnake.turn(\"E\");\n      enemySnake2.turn(\"W\");\n      enemySnake3.turn(\"E\");\n      enemySnake4.turn(\"S\");\n    });\n\n    key('right', function () {\n      snake.turn(\"E\");\n      enemySnake.turn(\"S\");\n      enemySnake2.turn(\"E\");\n      enemySnake3.turn(\"W\");\n      enemySnake4.turn(\"N\");\n    });\n\n    key('up', function () {\n      snake.turn(\"N\");\n      enemySnake.turn(\"W\");\n      enemySnake2.turn(\"N\");\n      enemySnake3.turn(\"S\");\n      enemySnake4.turn(\"E\");\n\n    });\n    key('down', function () {\n      snake.turn(\"S\");\n      enemySnake.turn(\"N\");\n      enemySnake2.turn(\"S\");\n      enemySnake3.turn(\"N\");\n      enemySnake4.turn(\"W\");\n    });\n};\n\n\nView.prototype.setupGrid = function () {\n  this.$el.append(\"<ul>\");\n  var $ul = $(\"<ul>\").addClass(\"snake-grid group\");\n  $(\"<figure>\").addClass(\"instructions\").html(\"<h1> Click to Start </h1> <h2> Collect red dots, don't let your head touch other snakes! </h2> <h3> Up Down Left Right Arrows to Turn! </h1> <h3> Full Screen Recommended! </h3>\").appendTo($ul);\n  $(\"<figure>\").addClass(\"gameover\").html(\"<h1> Game Over! </h1> <h2> Click to play again! </h2>\").hide().appendTo($ul);\n  $(\"<figure>\").addClass(\"scoreboard group\").html(\"<h1 class='current-score'> Curr: \" + this.board.score + \"</h1>\" + \"<h1 class='best-score'> Best: \" + this.board.bestScore + \"</h1>\").appendTo($ul);\n  for (var i = 0; i < 2500; i++) {\n    var pos = [parseInt(i / 50), i % 50];\n    $(\"<li>\").addClass(\"open\").data(\"pos\", pos).appendTo($ul);\n  }\n  this.$el.html($ul);\n};\n\nView.prototype.render = function () {\n  var board = this.board;\n  var snake = board.snake;\n  var enemySnake = board.enemySnake;\n  var enemySnake2 = board.enemySnake2;\n  var enemySnake3 = board.enemySnake3;\n  var enemySnake4 = board.enemySnake4;\n  var mySnakePositions = snake.segments\n  var enemySnakePositions = enemySnake.segments\n                      .concat(enemySnake2.segments)\n                      .concat(enemySnake3.segments)\n                      .concat(enemySnake4.segments);\n  var gamesquares = $('li').removeClass().addClass('open');\n  apple_pos = board.apple;\n  apple_idx = apple_pos[0] * 50 + apple_pos[1] % 50;\n  $(gamesquares[apple_idx]).removeClass().addClass('apple');\n  for (var j = 0; j < mySnakePositions.length; j++) {\n    pos = mySnakePositions[j];\n    li_idx = pos[0] * 50 + pos[1] % 50;\n    if (j === 0) {\n      $(gamesquares[li_idx]).removeClass().addClass('own-snake-head')\n    } else {\n      $(gamesquares[li_idx]).removeClass().addClass('own-snake');\n    }\n  }\n  for (var k = 0; k < enemySnakePositions.length; k++) {\n    pos = enemySnakePositions[k];\n    li_idx = pos[0] * 50 + pos[1] % 50;\n    $(gamesquares[li_idx]).removeClass().addClass('has-snake');\n  }\n  if (this.board.score > this.board.bestScore) {\n    this.board.bestScore = this.board.score;\n  }\n  $(\".scoreboard\").html(\"<h1 class='current-score'> Curr: \" + this.board.score + \"</h1>\" + \"<h1 class='best-score'> Best: \" + this.board.bestScore + \"</h1>\");\n};\n\nmodule.exports = View;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake-view.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}